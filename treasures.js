let GRID_SIZE=5,grid=[];for(let t=0;t<GRID_SIZE;t++){grid.push([]);for(let e=0;e<GRID_SIZE;e++)grid[t].push(0)}let treasuresLeft={5:0,6:0,7:0,8:0},score=0,roundsCompleted=0,hunterX=-1,hunterY=-1,gameStage="setup";function isValidCell(e,t){return 0<=e&&e<GRID_SIZE&&0<=t&&t<GRID_SIZE}function placeObject(e,t,n){if(0!==grid[e][t])alert("Cell already occupied. You cannot change the object.");else if("h"===n&&-1!==hunterX)alert("Only one treasure hunter can be placed.");else{if("number"==typeof n&&5<=n&&n<=8)grid[e][t]=n,treasuresLeft[n]++;else if("o"===n)grid[e][t]="o";else{if("h"!==n)return void alert("Invalid input! Enter a number between 5 and 8, 'o' for obstacle, or 'h' for hunter.");grid[e][t]="h",hunterX=e,hunterY=t}updateStatus(),renderGrid()}}function renderGrid(){var e=document.getElementById("grid");e.innerHTML="";for(let n=0;n<GRID_SIZE;n++)for(let t=0;t<GRID_SIZE;t++){var r,a,d=document.createElement("div");d.classList.add("cell"),"h"===grid[n][t]?((r=document.createElement("img")).src="./hunter.png",r.alt="Hunter",r.style.width="2.5em",r.style.height="2.5em",r.style.objectFit="contain",r.style.display="block",d.appendChild(r)):"o"===grid[n][t]?((r=document.createElement("img")).src="./obstacle.png",r.alt="Obstacle",r.style.width="2.5em",r.style.height="2.5em",r.style.objectFit="contain",r.style.display="block",d.appendChild(r)):5<=grid[n][t]&&grid[n][t]<=8?((a=document.createElement("img")).src="./treasure.png",a.alt="Treasure",a.style.width="2.5em",a.style.height="2.5em",a.style.objectFit="contain",a.style.display="block",d.appendChild(a)):d.textContent="",d.addEventListener("click",function(){var e;"setup"===gameStage&&(0!==grid[n][t]?alert("Cell already occupied. You cannot change the object."):null!==(e=prompt("Enter 5-8 for treasure, 'o' for obstacle, or 'h' for hunter:"))&&(!isNaN(e)&&5<=e&&e<=8?placeObject(n,t,parseInt(e)):"o"===e||"h"===e?placeObject(n,t,e):alert("Invalid input! Enter a number between 5 and 8, 'o' for obstacle, or 'h' for hunter.")))}),e.appendChild(d)}}function updateStatus(){document.getElementById("rounds").textContent=roundsCompleted,document.getElementById("treasures5").textContent=treasuresLeft[5],document.getElementById("treasures6").textContent=treasuresLeft[6],document.getElementById("treasures7").textContent=treasuresLeft[7],document.getElementById("treasures8").textContent=treasuresLeft[8],document.getElementById("score").textContent=score}function addRandomObstacle(){var e,t,n=[];for(let t=0;t<GRID_SIZE;t++)for(let e=0;e<GRID_SIZE;e++)0===grid[t][e]&&n.push({x:t,y:e});0<n.length&&({x:e,y:t}=n[Math.floor(Math.random()*n.length)],grid[e][t]="o")}function handleKeyPress(e){"play"===gameStage&&("w"===(e=e.key.toLowerCase())||"a"===e||"s"===e||"d"===e?moveHunter(e):alert("Invalid key! Use W(up), A (left), S (down) and D(right) keys to move the hunter."))}function moveHunter(e){let t=hunterX,n=hunterY;switch(e){case"w":t--;break;case"s":t++;break;case"a":n--;break;case"d":n++}isValidCell(t,n)?"o"===grid[t][n]?alert("Invalid move! You cannot move onto an obstacle."):(grid[hunterX][hunterY]=0,hunterX=t,hunterY=n,5<=grid[t][n]&&grid[t][n]<=8?(e=grid[t][n],score+=e,treasuresLeft[e]--,grid[t][n]="h",addRandomObstacle()):grid[t][n]="h",roundsCompleted++,updateStatus(),renderGrid(),checkGameEnd()):alert("Invalid move! You cannot move outside the grid.")}function checkGameEnd(){!Object.values(treasuresLeft).every(e=>0===e)&&[{x:hunterX-1,y:hunterY},{x:hunterX+1,y:hunterY},{x:hunterX,y:hunterY-1},{x:hunterX,y:hunterY+1}].some(({x:e,y:t})=>isValidCell(e,t)&&"o"!==grid[e][t])||endGame()}function endGame(){gameStage="end",document.removeEventListener("keydown",handleKeyPress);var e=0<roundsCompleted?(score/roundsCompleted).toFixed(2):0;alert("Game Over! Performance Index: "+e),document.getElementById("performanceIndex").textContent="Performance Index: "+e}function EndSetUp(){-1===hunterX?alert("You must place the hunter before starting the game!"):(gameStage="play",alert("Game started! Use W(up), A (left), S (down) and D(right) keys to move the hunter and collect treasures."),document.addEventListener("keydown",handleKeyPress))}function EndPlay(){var e;"play"!==gameStage?alert("Play stage ended :("):(gameStage="end",document.removeEventListener("keydown",handleKeyPress),e=0<roundsCompleted?(score/roundsCompleted).toFixed(2):0,alert(" The  is game over! Here's your Performance Index: "+e),document.getElementById("performanceIndex").textContent="Performance Index: "+e)}document.addEventListener("DOMContentLoaded",function(){renderGrid(),updateStatus()});
